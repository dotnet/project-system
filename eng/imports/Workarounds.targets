<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <!--
    Both xunit.runner.console and xunit.runner.visualstudio carry the same file and try to deploy it as CopyToOutputDirectory item.
    Remove them both, xunit.extensibility.core carries the version we will use.
  -->
  <ItemGroup>
    <None Remove="$(Pkgxunit_runner_visualstudio)\**\xunit.abstractions.dll" Condition="'$(Pkgxunit_runner_visualstudio)' != ''" />
    <None Remove="$(Pkgxunit_runner_console)\**\xunit.abstractions.dll" Condition="'$(Pkgxunit_runner_console)' != ''"/>
  </ItemGroup>

  <!-- The build.cmd will run the Test target on all projects. Non-test projects have no Test target. This target is overridden for test projects. -->
  <Target Name="Test" />
  <!-- Workaround for https://github.com/dotnet/wpf/issues/810 -->
  <Import Project="$(_WpfTempProjectNuGetFilePathNoExt).targets" Condition="'$(_WpfTempProjectNuGetFilePathNoExt)' != '' and Exists('$(_WpfTempProjectNuGetFilePathNoExt).targets')"/>

  <!--
    This is a workaround for allowing neutral CTO resource produced from *.vsct to go in the main assembly.

    We move the neutral *.cto file to be categorized as WithCulture=true,Culture=en to prevent the tools from falsely reporting:
      error VSSDK1006: Two CTO files have the same Menus.ctmenu resource name.

    Note that this categorization does not apply to the items that actually produce the .resources.dll and so it will not cause an English satellite to be generated.
    The documented way around this is to put all resources (including neutral/en) in satellites: https://msdn.microsoft.com/en-us/library/ee943168.aspx

    However, that has consequences we do not want:
      - It breaks resx code-gen to *.designer.cs
      - It causes extra dll loads in en case
      - If we ever split satellites in to language packs, the english fallback satellites would become a special case.
  -->
  <Target Name="AssignEnCultureToNeutralCto" BeforeTargets="MergeCtoResource">
    <ItemGroup>
      <_GeneratedCTOFilesWithCulture Include="@(_GeneratedCTOFilesWithNoCulture)">
        <Culture>en</Culture>
        <WithCulture>true</WithCulture>
      </_GeneratedCTOFilesWithCulture>
      <_GeneratedCTOFilesWithNoCulture Remove="@(_GeneratedCTOFilesWithNoCulture)" />
      <_ResourcesToMergeWithCTOWithCultureMetadata Condition="'%(WithCulture)' != 'true'">
        <Culture>en</Culture>
        <WithCulture>true</WithCulture>
      </_ResourcesToMergeWithCTOWithCultureMetadata>
    </ItemGroup>
  </Target>

  <!--
    Workaround for https://github.com/Microsoft/msbuild/issues/1310
    This creates a .dll.config containing the binding redirects we need to run our unit test assemblies.
    Without this, running the unit tests will fail and state, "The located assembly's manifest definition does not match the assembly reference."
  -->
  <Target Name="ForceGenerationOfBindingRedirects" AfterTargets="ResolveAssemblyReferences" BeforeTargets="GenerateBindingRedirects" Condition="'$(AutoGenerateBindingRedirects)' == 'true'">
    <PropertyGroup>
      <!-- Needs to be set after the initial evaluation in the Common targets. -->
      <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    </PropertyGroup>
  </Target>

</Project>