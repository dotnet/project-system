<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\..\eng\imports\HostAgnostic.props" />

  <PropertyGroup>
    <RootNamespace>Microsoft.VisualStudio</RootNamespace>
    <!-- The value of RuleInjectionClassName of XamlPropertyRule items defined by this project -->
    <XamlPropertyRuleInjectionClassName>ProjectProperties</XamlPropertyRuleInjectionClassName>
    <IsManagedProjectSystemProject>true</IsManagedProjectSystemProject>
    <TargetFrameworks>net472;$(NetCoreTargetFramework)</TargetFrameworks>

    <!-- Nuget -->
    <IsPackable>true</IsPackable>
    <Description>Microsoft VisualStudio ProjectSystem for Managed languages Projects</Description>
    <Summary>Microsoft VisualStudio Managed Project System</Summary>
    <PackageTags>Roslyn Managed Project System VisualStudio</PackageTags>
    <NoWarn>$(NoWarn);NU5125</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == '$(NetCoreTargetFramework)'">
    <!-- Sets the DependsOn for NPM packaging. We use the designated target to select the files to pack. -->
    <!-- See: https://dev.azure.com/devdiv/DevDiv/_git/vs-green?path=/components&anchor=packaging-components -->
    <StageForNpmPackDependsOn>$(StageForNpmPackDependsOn);AddFilesForNpmPackage</StageForNpmPackDependsOn>
    <NpmPackageOutputPath>$(PackageOutputPath)</NpmPackageOutputPath>
  </PropertyGroup>

  <!-- TODO: Re-enable nullability and clean up warnings. -->
  <PropertyGroup Condition="'$(TargetFramework)' == '$(NetCoreTargetFramework)'">
    <Nullable>annotations</Nullable>
    <NoWarn>$(NoWarn);RS0037</NoWarn>
  </PropertyGroup>

  <!-- TODO: Remove this once ILaunchSettingsUIProvider has been removed. -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.VisualStudio.ProjectSystem.Managed.VS" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.ProjectSystem.Managed.VSCode" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.ProjectSystem.Managed.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.ProjectSystem.Managed.VS.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.ProjectSystem.Managed.VSCode.UnitTests" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" />
  </ItemGroup>

  <ItemGroup>
    <!-- Needed to break assembly conflict on StreamJsonRpc between microsoft.visualstudio.projectsystem.query and microsoft.visualstudio.languageservices -->
    <PackageReference Include="Microsoft.VisualStudio.RpcContracts" />
    <!-- Path property: PkgMicrosoft_CodeAnalysis_Common -->
    <!-- The path is needed so we can copy the runtime assembly into the NPM package. -->
    <PackageReference Include="Microsoft.CodeAnalysis.Common" GeneratePathProperty="true" />
    <PackageReference Include="System.Formats.Asn1" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == '$(NetCoreTargetFramework)'">
    <!-- Package for creating an NPM package during build. -->
    <!-- See: https://dev.azure.com/devdiv/DevDiv/_git/vs-green?path=/components&anchor=packaging-components -->
    <PackageReference Include="Microsoft.VisualStudio.Internal.MicroBuild.NpmPack" PrivateAssets="all" />
  </ItemGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <!-- Analyzer Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\AnalyzerReference.xaml.cs">
      <DependentUpon>AnalyzerReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\AnalyzerReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedAnalyzerReference.xaml.cs">
      <DependentUpon>ResolvedAnalyzerReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedAnalyzerReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- Assembly Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\AssemblyReference.cs">
      <DependentUpon>AssemblyReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\AssemblyReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedAssemblyReference.cs">
      <DependentUpon>ResolvedAssemblyReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedAssemblyReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- COM Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\COMReference.cs">
      <DependentUpon>COMReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\COMReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedCOMReference.cs">
      <DependentUpon>ResolvedCOMReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedCOMReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- Framework Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\FrameworkReference.cs">
      <DependentUpon>FrameworkReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\FrameworkReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedFrameworkReference.cs">
      <DependentUpon>ResolvedFrameworkReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedFrameworkReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- Package Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\PackageReference.cs">
      <DependentUpon>PackageReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\PackageReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <XamlPropertyRule Include="ProjectSystem\Rules\SuggestedWorkload.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <XlfInput>false</XlfInput>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedPackageReference.cs">
      <DependentUpon>ResolvedPackageReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedPackageReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- Project Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\ProjectReference.cs">
      <DependentUpon>ProjectReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ProjectReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedProjectReference.cs">
      <DependentUpon>ResolvedProjectReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedProjectReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\EvaluatedProjectReference.cs">
      <DependentUpon>EvaluatedProjectReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\EvaluatedProjectReference.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- SDK Reference -->
    <Compile Update="ProjectSystem\Rules\Dependencies\SdkReference.xaml.cs">
      <DependentUpon>SdkReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\SdkReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Dependencies\ResolvedSdkReference.cs">
      <DependentUpon>ResolvedSdkReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Dependencies\ResolvedSdkReference.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <!-- Property Pages -->
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ApplicationPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ApplicationPropertyPage.CSharp.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ApplicationPropertyPage.VisualBasic.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\BuildPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\BuildPropertyPage.CSharp.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\BuildPropertyPage.VisualBasic.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\CodeAnalysisPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ConfigurationGeneralPage.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\DebugPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\SettingsPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ResourcesPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ExecutableDebugPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\PackagePropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ProjectDebugPropertyPage.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ReferencesPage.CSharp.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\ReferencesPage.VisualBasic.xaml" />
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\PropertyPages\BuildPropertyPage.FSharp.xaml" />
  </ItemGroup>

  <!-- Items -->
  <ItemGroup>
    <Compile Update="ProjectSystem\Rules\Items\AdditionalFiles.cs">
      <DependentUpon>AdditionalFiles.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\AdditionalFiles.xaml">
      <SubType>Designer</SubType>
      <XlfInput>false</XlfInput>
      <DataAccess>None</DataAccess>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <Compile Update="ProjectSystem\Rules\Items\Compile.cs">
      <DependentUpon>Compile.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\Compile.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Compile.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Compile.BrowseObject.xaml" />

    <Compile Update="ProjectSystem\Rules\Items\Content.cs">
      <DependentUpon>Content.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\Content.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Content.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Content.BrowseObject.xaml" />


    <Compile Update="ProjectSystem\Rules\Items\Resource.cs">
      <DependentUpon>Resource.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\Resource.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Resource.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\Resource.BrowseObject.xaml" />

    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EditorConfigFiles.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EditorConfigFiles.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EditorConfigFiles.BrowseObject.xaml" />

    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EmbeddedResource.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EmbeddedResource.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\EmbeddedResource.BrowseObject.xaml" />

    <Compile Update="ProjectSystem\Rules\Items\Folder.cs">
      <DependentUpon>Folder.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\Folder.xaml">
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\Items\None.cs">
      <DependentUpon>None.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\Items\None.xaml">
      <XlfInput>false</XlfInput>
      <SubType>Designer</SubType>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\None.FSharp.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\None.BrowseObject.xaml" />

    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\Items\PackageVersion.xaml">
      <XlfInput>false</XlfInput>
    </XamlPropertyRuleNoCodeBehind>
  </ItemGroup>

  <!-- Others -->
  <ItemGroup>
    <Compile Update="ProjectSystem\Rules\AppDesigner.xaml.cs">
      <DependentUpon>AppDesigner.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\AppDesigner.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CollectedFrameworkReference.cs">
      <DependentUpon>CollectedFrameworkReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CollectedFrameworkReference.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CollectedNuGetAuditSuppressions.cs">
      <DependentUpon>CollectedNuGetAuditSuppressions.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CollectedNuGetAuditSuppressions.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CollectedPackageDownload.cs">
      <DependentUpon>CollectedPackageDownload.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CollectedPackageDownload.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CollectedPackageReference.cs">
      <DependentUpon>CollectedPackageReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CollectedPackageReference.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CollectedPackageVersion.cs">
      <DependentUpon>CollectedPackageVersion.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CollectedPackageVersion.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\CompilerCommandLineArgs.cs">
      <DependentUpon>CompilerCommandLineArgs.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\CompilerCommandLineArgs.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\ConfigurationGeneral.xaml.cs">
      <DependentUpon>ConfigurationGeneral.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\ConfigurationGeneral.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
    </XamlPropertyRule>

    <!-- TODO reconcile mismatched file names -->
    <Compile Update="ProjectSystem\Rules\ConfiguredBrowseObject.cs">
      <DependentUpon>GeneralConfiguredBrowseObject.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\GeneralConfiguredBrowseObject.xaml">
      <XlfInput>false</XlfInput>
      <SubType>Designer</SubType>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
    </XamlPropertyRule>

    <XamlPropertyRuleNoCodeBehind Include="ProjectSystem\Rules\DebuggerGeneral.xaml" />

    <Compile Update="ProjectSystem\Rules\DotNetCliToolReference.cs">
      <DependentUpon>DotNetCliToolReference.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\DotNetCliToolReference.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\GeneralBrowseObject.cs">
      <DependentUpon>GeneralBrowseObject.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\GeneralBrowseObject.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\LanguageService.cs">
      <DependentUpon>LanguageService.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\LanguageService.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\NuGetRestore.cs">
      <DependentUpon>NuGetRestore.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\NuGetRestore.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\ProjectDebugger.xaml.cs">
      <DependentUpon>ProjectDebugger.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\ProjectDebugger.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
    </XamlPropertyRule>

    <XamlPropertyRule Include="ProjectSystem\Rules\SourceControl.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SupportedTargetFrameworkAlias.cs">
      <DependentUpon>SupportedTargetFrameworkAlias.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SupportedTargetFrameworkAlias.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SupportedTargetFramework.cs">
      <DependentUpon>SupportedTargetFramework.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SupportedTargetFramework.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SupportedNETCoreAppTargetFramework.cs">
      <DependentUpon>SupportedNETCoreAppTargetFramework.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SupportedNETCoreAppTargetFramework.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SupportedNETStandardTargetFramework.cs">
      <DependentUpon>SupportedNETStandardTargetFramework.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SupportedNETStandardTargetFramework.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SupportedNETFrameworkTargetFramework.cs">
      <DependentUpon>SupportedNETFrameworkTargetFramework.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SupportedNETFrameworkTargetFramework.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SdkSupportedTargetPlatformIdentifier.cs">
      <DependentUpon>SdkSupportedTargetPlatformIdentifier.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SdkSupportedTargetPlatformIdentifier.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\SdkSupportedTargetPlatformVersion.cs">
      <DependentUpon>SdkSupportedTargetPlatformVersion.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\SdkSupportedTargetPlatformVersion.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\WindowsFormsConfiguration.cs">
      <DependentUpon>WindowsFormsConfiguration.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\WindowsFormsConfiguration.xaml">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>

    <Compile Update="ProjectSystem\Rules\VisualBasic.NamespaceImport.cs">
      <DependentUpon>VisualBasic.NamespaceImport.xaml</DependentUpon>
    </Compile>
    <XamlPropertyRule Include="ProjectSystem\Rules\VisualBasic.NamespaceImport.xaml">
      <XlfInput>false</XlfInput>
      <Generator>MSBuild:GenerateRuleSourceFromXaml</Generator>
      <SubType>Designer</SubType>
      <DataAccess>None</DataAccess>
      <RuleInjection>None</RuleInjection>
    </XamlPropertyRule>
  </ItemGroup>

  <ItemGroup>
    <XamlPropertyProjectItemsSchema Include="ProjectSystem\Rules\Items\ProjectItemsSchema.xaml" />
    <XamlPropertyProjectItemsSchema Include="ProjectSystem\Rules\Items\ProjectItemsSchema.CSharp.xaml" />
    <XamlPropertyProjectItemsSchema Include="ProjectSystem\Rules\Items\ProjectItemsSchema.VisualBasic.xaml" />
    <XamlPropertyProjectItemsSchema Include="ProjectSystem\Rules\Items\ProjectItemsSchema.FSharp.xaml" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <Compile Update="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Include="xlf\*" />
  </ItemGroup>

  <ItemGroup>
    <DesignTimeTargetsFile Include="ProjectSystem\DesignTimeTargets\*.targets" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <None Remove="PublicAPI\net472\*.txt" />
    <AdditionalFiles Include="PublicAPI\net472\*.txt" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == '$(NetCoreTargetFramework)'">
    <None Remove="PublicAPI\$(NetCoreTargetFramework)\*.txt" />
    <AdditionalFiles Include="PublicAPI\$(NetCoreTargetFramework)\*.txt" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ProjectSystem\Rules\Items\Resource.FSharp.xaml">
      <Generator>MSBuild:Compile</Generator>
    </None>
  </ItemGroup>

  <Target Name="AddFilesForNpmPackage" DependsOnTargets="Build;SatelliteDllsProjectOutputGroup" Condition="'$(TargetFramework)' == '$(NetCoreTargetFramework)'">
    <ItemGroup>
      <NpmContent Include="exports.json" />
      <!-- We have a runtime dependency on Microsoft.CodeAnalysis.dll in VS Code scenarios. -->
      <NpmContent Include="$(PkgMicrosoft_CodeAnalysis_Common)\lib\net8.0\Microsoft.CodeAnalysis.dll" />
      <NpmContent Include="@(SatelliteDllsProjectOutputGroupOutput)">
        <PackagePath>%(SatelliteDllsProjectOutputGroupOutput.TargetPath)</PackagePath>
      </NpmContent>
      <!-- Include symbol files (.pdb) so we can get code coverage numbers from C# Dev Kit integration test runs. -->
      <NpmContent Include="@(DebugSymbolsProjectOutputGroupOutput)" />
    </ItemGroup>
  </Target>


  <!-- Adds all the .xaml *and* .targets files under $(VisualStudioXamlRulesDir) to our NuGet package by
       creating <None> items with the "Pack" metadata set to "true. By putting them in the package they
       will be available to setup components created in other repos.

       We need to do this within a target because many of the files we care about are created during the
       build; e.g. the translated .xaml files. We don't really want those included in the evaluation because
       they will pop in an out of existence depending on where we are in the build process, and we don't
       really want them to show up in the Solution Explorer or anywhere else.

       Note that $(VisualStudioXamlRulesDir) could potentially include includes files from any project in
       the solution, though at the moment only this project seems to put files there. If other projects
       start to put files there we will need to do something more sophisticated.

       Also note that this is implicitly dependent on the CopyXamlRulesToOutputDirectory and
       CopyDesignTimeTargetsToOutputDirectory targets, which are defined in VisualStudio.XamlRules.targets.
  -->
  <Target Name="AddXamlRulesToNuGetPackage" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <Content Include="$(VisualStudioXamlRulesDir)\**\*.*">
        <Pack>true</Pack>
        <PackagePath>content\DesignTimeTargets\</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

</Project>
